(function() {
  window.app = pipeline.createApp({
    debug: window.location.hostname === 'localhost'
  });

  app.views = {};

  app.createView = function(key, options) {
    var splitKey, view;
    splitKey = key.replace(/([A-Z])/g, " $1");
    options.displayName = splitKey.charAt(0).toUpperCase() + splitKey.slice(1);
    options.key = key;
    view = React.createFactory(React.createClass(options));
    app.views[key] = view;
    return view;
  };

}).call(this);

(function() {
  app.createAction('goTo', function(location) {
    return {
      location: location
    };
  });

}).call(this);

(function() {
  app.createStore('location', {
    initialze: function() {
      return this.update('location', {});
    },
    api: {
      getLocation: function(prop) {
        var loc, _ref;
        loc = this.get('location');
        if (prop != null) {
          return (_ref = this.get('location')) != null ? _ref[prop] : void 0;
        } else {
          return this.get('location');
        }
      }
    },
    actions: {
      goTo: function(payload, stores, actions) {
        return this.update({
          location: payload.location
        });
      }
    }
  });

}).call(this);

(function() {
  var a, div, _ref;

  _ref = React.DOM, div = _ref.div, a = _ref.a;

  app.createView('base', {
    render: function() {
      return div({
        className: 'base'
      }, a({
        className: 'contents',
        href: '//twitter.com/@uiwill'
      }, 'Hello'));
    }
  });

}).call(this);

(function() {
  app.start();

  React.render(app.views.base(), document.getElementById('react-mount-point'));

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHVwLmNvZmZlZSIsImFjdGlvbnMuY29mZmVlIiwibG9jYXRpb24uY29mZmVlIiwiYmFzZS5jb2ZmZWUiLCJtb3VudC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxFQUFBLE1BQU0sQ0FBQyxHQUFQLEdBQWEsUUFBUSxDQUFDLFNBQVQsQ0FBbUI7QUFBQSxJQUFBLEtBQUEsRUFBTyxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQWhCLEtBQTZCLFdBQXBDO0dBQW5CLENBQWIsQ0FBQTs7QUFBQSxFQUVBLEdBQUcsQ0FBQyxLQUFKLEdBQVksRUFGWixDQUFBOztBQUFBLEVBSUEsR0FBRyxDQUFDLFVBQUosR0FBaUIsU0FBQyxHQUFELEVBQU0sT0FBTixHQUFBO0FBQ2YsUUFBQSxjQUFBO0FBQUEsSUFBQSxRQUFBLEdBQVcsR0FBRyxDQUFDLE9BQUosQ0FBYSxVQUFiLEVBQTBCLEtBQTFCLENBQVgsQ0FBQTtBQUFBLElBQ0EsT0FBTyxDQUFDLFdBQVIsR0FBc0IsUUFBUSxDQUFDLE1BQVQsQ0FBZ0IsQ0FBaEIsQ0FBa0IsQ0FBQyxXQUFuQixDQUFBLENBQUEsR0FBbUMsUUFBUSxDQUFDLEtBQVQsQ0FBZSxDQUFmLENBRHpELENBQUE7QUFBQSxJQUVBLE9BQU8sQ0FBQyxHQUFSLEdBQWMsR0FGZCxDQUFBO0FBQUEsSUFHQSxJQUFBLEdBQU8sS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBSyxDQUFDLFdBQU4sQ0FBa0IsT0FBbEIsQ0FBcEIsQ0FIUCxDQUFBO0FBQUEsSUFJQSxHQUFHLENBQUMsS0FBTSxDQUFBLEdBQUEsQ0FBVixHQUFpQixJQUpqQixDQUFBO1dBS0EsS0FOZTtFQUFBLENBSmpCLENBQUE7QUFBQTs7O0FDQUE7QUFBQSxFQUFBLEdBQUcsQ0FBQyxZQUFKLENBQWtCLE1BQWxCLEVBQXlCLFNBQUMsUUFBRCxHQUFBO1dBQWM7QUFBQSxNQUFBLFFBQUEsRUFBVSxRQUFWO01BQWQ7RUFBQSxDQUF6QixDQUFBLENBQUE7QUFBQTs7O0FDQUE7QUFBQSxFQUFBLEdBQUcsQ0FBQyxXQUFKLENBQWlCLFVBQWpCLEVBQ0U7QUFBQSxJQUFBLFNBQUEsRUFBVyxTQUFBLEdBQUE7YUFDVCxJQUFDLENBQUEsTUFBRCxDQUFTLFVBQVQsRUFBb0IsRUFBcEIsRUFEUztJQUFBLENBQVg7QUFBQSxJQUdBLEdBQUEsRUFDRTtBQUFBLE1BQUEsV0FBQSxFQUFhLFNBQUMsSUFBRCxHQUFBO0FBQ1gsWUFBQSxTQUFBO0FBQUEsUUFBQSxHQUFBLEdBQU0sSUFBQyxDQUFBLEdBQUQsQ0FBTSxVQUFOLENBQU4sQ0FBQTtBQUNBLFFBQUEsSUFBRyxZQUFIOzZEQUFnQyxDQUFBLElBQUEsV0FBaEM7U0FBQSxNQUFBO2lCQUEyQyxJQUFDLENBQUEsR0FBRCxDQUFNLFVBQU4sRUFBM0M7U0FGVztNQUFBLENBQWI7S0FKRjtBQUFBLElBUUEsT0FBQSxFQUNFO0FBQUEsTUFBQSxJQUFBLEVBQU0sU0FBQyxPQUFELEVBQVUsTUFBVixFQUFrQixPQUFsQixHQUFBO2VBQ0osSUFBQyxDQUFBLE1BQUQsQ0FBUTtBQUFBLFVBQUEsUUFBQSxFQUFVLE9BQU8sQ0FBQyxRQUFsQjtTQUFSLEVBREk7TUFBQSxDQUFOO0tBVEY7R0FERixDQUFBLENBQUE7QUFBQTs7O0FDQUE7QUFBQSxNQUFBLFlBQUE7O0FBQUEsRUFBQSxPQUFXLEtBQUssQ0FBQyxHQUFqQixFQUFDLFdBQUEsR0FBRCxFQUFNLFNBQUEsQ0FBTixDQUFBOztBQUFBLEVBRUEsR0FBRyxDQUFDLFVBQUosQ0FBZ0IsTUFBaEIsRUFDRTtBQUFBLElBQUEsTUFBQSxFQUFRLFNBQUEsR0FBQTthQUNOLEdBQUEsQ0FBSTtBQUFBLFFBQUEsU0FBQSxFQUFZLE1BQVo7T0FBSixFQUNFLENBQUEsQ0FBRTtBQUFBLFFBQUEsU0FBQSxFQUFZLFVBQVo7QUFBQSxRQUF1QixJQUFBLEVBQU8sdUJBQTlCO09BQUYsRUFDRyxPQURILENBREYsRUFETTtJQUFBLENBQVI7R0FERixDQUZBLENBQUE7QUFBQTs7O0FDQUE7QUFBQSxFQUFBLEdBQUcsQ0FBQyxLQUFKLENBQUEsQ0FBQSxDQUFBOztBQUFBLEVBRUEsS0FBSyxDQUFDLE1BQU4sQ0FBYSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQVYsQ0FBQSxDQUFiLEVBQStCLFFBQVEsQ0FBQyxjQUFULENBQXlCLG1CQUF6QixDQUEvQixDQUZBLENBQUE7QUFBQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2luZG93LmFwcCA9IHBpcGVsaW5lLmNyZWF0ZUFwcChkZWJ1Zzogd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lIGlzICdsb2NhbGhvc3QnKVxuXG5hcHAudmlld3MgPSB7fVxuXG5hcHAuY3JlYXRlVmlldyA9IChrZXksIG9wdGlvbnMpIC0+XG4gIHNwbGl0S2V5ID0ga2V5LnJlcGxhY2UoIC8oW0EtWl0pL2csIFwiICQxXCIgKVxuICBvcHRpb25zLmRpc3BsYXlOYW1lID0gc3BsaXRLZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzcGxpdEtleS5zbGljZSgxKVxuICBvcHRpb25zLmtleSA9IGtleVxuICB2aWV3ID0gUmVhY3QuY3JlYXRlRmFjdG9yeSBSZWFjdC5jcmVhdGVDbGFzcyBvcHRpb25zXG4gIGFwcC52aWV3c1trZXldID0gdmlld1xuICB2aWV3XG4iLCJhcHAuY3JlYXRlQWN0aW9uICdnb1RvJywgKGxvY2F0aW9uKSAtPiBsb2NhdGlvbjogbG9jYXRpb25cbiIsImFwcC5jcmVhdGVTdG9yZSAnbG9jYXRpb24nLFxuICBpbml0aWFsemU6IC0+XG4gICAgQHVwZGF0ZSgnbG9jYXRpb24nLCB7fSlcblxuICBhcGk6XG4gICAgZ2V0TG9jYXRpb246IChwcm9wKSAtPlxuICAgICAgbG9jID0gQGdldCgnbG9jYXRpb24nKVxuICAgICAgaWYgcHJvcD8gdGhlbiBAZ2V0KCdsb2NhdGlvbicpP1twcm9wXSBlbHNlIEBnZXQoJ2xvY2F0aW9uJylcblxuICBhY3Rpb25zOlxuICAgIGdvVG86IChwYXlsb2FkLCBzdG9yZXMsIGFjdGlvbnMpIC0+XG4gICAgICBAdXBkYXRlIGxvY2F0aW9uOiBwYXlsb2FkLmxvY2F0aW9uXG5cblxuIiwie2RpdiwgYX0gPSBSZWFjdC5ET01cblxuYXBwLmNyZWF0ZVZpZXcgJ2Jhc2UnLFxuICByZW5kZXI6IC0+XG4gICAgZGl2IGNsYXNzTmFtZTogJ2Jhc2UnLFxuICAgICAgYSBjbGFzc05hbWU6ICdjb250ZW50cycsIGhyZWY6ICcvL3R3aXR0ZXIuY29tL0B1aXdpbGwnLFxuICAgICAgICAnSGVsbG8nXG4iLCJhcHAuc3RhcnQoKVxuXG5SZWFjdC5yZW5kZXIgYXBwLnZpZXdzLmJhc2UoKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYWN0LW1vdW50LXBvaW50JylcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==